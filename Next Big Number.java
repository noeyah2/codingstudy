public int solution(int n) {
    int c = n;
    int c0 = 0;
    int c1 = 0;

    // 1의 개수 세기 (오른쪽 끝부터)
    while (((c & 1) == 0) && (c != 0)) {
        c0++;
        c >>= 1;
    }
    while ((c & 1) == 1) {
        c1++;
        c >>= 1;
    }

    // n이 111...000 형태라면 불가능
    if (c0 + c1 == 31 || c0 + c1 == 0) return -1;

    int pos = c0 + c1; // 바꿔야 할 위치

    // 해당 위치의 비트를 1로 바꾸기
    n |= (1 << pos);
    // 그 오른쪽 비트들을 0으로 초기화
    n &= ~((1 << pos) - 1);
    // 필요한 개수만큼 1 채우기
    n |= (1 << (c1 - 1)) - 1;

    return n;
}
